name: macOS VNC via ZeroTier (stable)

on:
  workflow_dispatch:
    inputs:
      zerotier_network:
        description: "ZeroTier Network ID (from https://my.zerotier.com)"
        required: true
      vnc_password:
        description: "VNC password (max 8 chars)"
        required: false
        default: "12345678"
      runtime_minutes:
        description: "Keep-alive minutes (max 360)"
        required: false
        default: "120"

jobs:
  vnc:
    runs-on: macos-13
    timeout-minutes: 370
    steps:
      - name: Download and extract TigerVNC
        shell: bash
        run: |
          set -euo pipefail
          arch="$(uname -m)"
          if [ "$arch" = "x86_64" ]; then
            url="https://downloads.sourceforge.net/project/tigervnc/stable/1.13.1/TigerVNC-1.13.1-x86_64-Darwin.tar.gz"
          else
            url="https://downloads.sourceforge.net/project/tigervnc/stable/1.13.1/TigerVNC-1.13.1-arm64-Darwin.tar.gz"
          fi
          curl -fL -A "Mozilla/5.0" "$url" -o /tmp/tigervnc.tar.gz
          mkdir -p /tmp/vncbin
          tar -xzf /tmp/tigervnc.tar.gz -C /tmp/vncbin
          VNC_DIR="$(find /tmp/vncbin -type f -name vncserver -maxdepth 3 -print -quit | xargs dirname)"
          echo "$VNC_DIR" > /tmp/vnc_path.txt
          test -x "$VNC_DIR/vncserver"

      - name: Set VNC password and start server (port 5901)
        shell: bash
        run: |
          set -euo pipefail
          VNC_DIR="$(cat /tmp/vnc_path.txt)"
          mkdir -p "$HOME/.vnc"
          PW="${{ inputs.vnc_password }}"
          PW="${PW:0:8}"
          printf '%s\n' "$PW" | "$VNC_DIR/vncpasswd" -f > "$HOME/.vnc/passwd"
          chmod 600 "$HOME/.vnc/passwd"
          nohup "$VNC_DIR/vncserver" :1 -geometry 1280x720 -rfbauth "$HOME/.vnc/passwd" > "$HOME/vnc.log" 2>&1 &
          sleep 5
          echo "TigerVNC started on :1 (TCP 5901)."

      - name: Install and join ZeroTier
        shell: bash
        run: |
          set -euo pipefail
          curl -fL https://install.zerotier.com/ -o /tmp/zt.sh
          sudo bash /tmp/zt.sh
          sudo zerotier-cli join "${{ inputs.zerotier_network }}"
          echo "Authorize this member in the ZeroTier dashboard."

      - name: Wait for ZeroTier IP
        shell: bash
        run: |
          set -euo pipefail
          for i in {1..24}; do
            IP="$(sudo zerotier-cli listnetworks 2>/dev/null | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n1 || true)"
            [ -n "$IP" ] && break
            sleep 5
          done
          if [ -n "$IP" ]; then
            echo "ZT_IP=$IP" >> "$GITHUB_ENV"
            echo "Connect VNC client to: $IP:5901"
            echo "Password: first 8 chars you entered"
          else
            echo "No ZeroTier IP yet. Authorize the node in dashboard."
          fi

      - name: Keep alive
        shell: bash
        run: |
          rt="${{ inputs.runtime_minutes }}"
          case "$rt" in (''|*[!0-9]*) rt=120;; esac
          [ "$rt" -gt 360 ] && rt=360
          end=$(( $(date +%s) + 60*rt ))
          while [ "$(date +%s)" -lt "$end" ]; do
            echo "[VNC+ZT] Heartbeat $(date '+%H:%M:%S') | ${ZT_IP:-authorize}:5901"
            sleep 60
          done
