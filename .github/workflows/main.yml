name: macOS VNC via ZeroTier (brew TigerVNC, robust paths)

on:
  workflow_dispatch:
    inputs:
      zerotier_network:
        description: "ZeroTier Network ID (from https://my.zerotier.com)"
        required: true
      vnc_password:
        description: "VNC password (max 8 chars)"
        required: false
        default: "12345678"
      runtime_minutes:
        description: "Keep-alive minutes (max 360)"
        required: false
        default: "120"

jobs:
  vnc:
    runs-on: macos-13
    timeout-minutes: 370
    steps:
      - name: Install TigerVNC via Homebrew and locate binaries
        shell: bash
        run: |
          set -euo pipefail
          brew update >/dev/null
          brew install tiger-vnc
          BIN_DIR="$(brew --prefix tiger-vnc)/bin"
          if [ ! -x "$BIN_DIR/vncserver" ] || [ ! -x "$BIN_DIR/vncpasswd" ]; then
            echo "TigerVNC binaries not found in $BIN_DIR"
            echo "Installed files:"
            brew list tiger-vnc
            exit 1
          fi
          echo "$BIN_DIR" > /tmp/vnc_bin_dir
          echo "TigerVNC bin dir: $BIN_DIR"

      - name: Set VNC password and start server (port 5901) + self-test
        shell: bash
        run: |
          set -euo pipefail
          BIN_DIR="$(cat /tmp/vnc_bin_dir)"
          mkdir -p "$HOME/.vnc"
          PW="${{ inputs.vnc_password }}"
          PW="${PW:0:8}"
          printf '%s\n' "$PW" | "$BIN_DIR/vncpasswd" -f > "$HOME/.vnc/passwd"
          chmod 600 "$HOME/.vnc/passwd"
          nohup "$BIN_DIR/vncserver" :1 -geometry 1280x720 -SecurityTypes VncAuth -rfbauth "$HOME/.vnc/passwd" > "$HOME/vnc.log" 2>&1 &
          # Wait for port 5901 to listen
          for i in {1..30}; do
            if lsof -iTCP:5901 -sTCP:LISTEN >/dev/null 2>&1; then
              echo "TigerVNC is listening on TCP 5901."
              break
            fi
            sleep 1
          done
          if ! lsof -iTCP:5901 -sTCP:LISTEN >/dev/null 2>&1; then
            echo "VNC did not start; log tail:"
            tail -n 120 "$HOME/vnc.log" || true
            exit 1
          fi

      - name: Install and join ZeroTier
        shell: bash
        run: |
          set -euo pipefail
          curl -fL https://install.zerotier.com/ -o /tmp/zt.sh
          sudo bash /tmp/zt.sh
          sudo zerotier-cli join "${{ inputs.zerotier_network }}"
          echo "Joined ZeroTier: ${{ inputs.zerotier_network }}"
          echo "Authorize this member in your ZeroTier dashboard."

      - name: Wait for ZeroTier IP and print connect info
        shell: bash
        run: |
          set -euo pipefail
          ZT_IP=""
          for i in {1..24}; do
            ZT_IP="$(sudo zerotier-cli listnetworks 2>/dev/null | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n1 || true)"
            [ -n "$ZT_IP" ] && break
            sleep 5
          done
          if [ -n "$ZT_IP" ]; then
            echo "ZT_IP=$ZT_IP" >> "$GITHUB_ENV"
            echo "===================================="
            echo "Connect with any VNC client:"
            echo " Address : $ZT_IP:5901"
            echo " Password: first 8 chars you provided"
            echo "===================================="
          else
            echo "No ZeroTier IP yet. Authorize the node in dashboard, then connect to <ZT_IP>:5901"
          fi

      - name: Keep alive
        shell: bash
        run: |
          rt="${{ inputs.runtime_minutes }}"
          case "$rt" in (''|*[!0-9]*) rt=120;; esac
          [ "$rt" -gt 360 ] && rt=360
          end=$(( $(date +%s) + 60*rt ))
          while [ "$(date +%s)" -lt "$end" ]; do
            echo "[VNC+ZT] Heartbeat $(date '+%H:%M:%S') | ${ZT_IP:-authorize}:5901"
            sleep 60
          done
