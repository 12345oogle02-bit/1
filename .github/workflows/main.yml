name: Ubuntu VNC via ZeroTier (passwordless, stable)

on:
  workflow_dispatch:
    inputs:
      zerotier_network:
        description: "ZeroTier Network ID"
        required: true
      runtime_minutes:
        description: "Keep-alive minutes (<=360)"
        required: false
        default: "180"

jobs:
  vnc:
    runs-on: ubuntu-22.04
    timeout-minutes: 370
    steps:
      - name: Install desktop and VNC
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y xfce4 xfce4-goodies tigervnc-standalone-server tigervnc-common xterm dbus-x11
          mkdir -p ~/.vnc
          cat > ~/.vnc/xstartup <<'EOF'
          #!/bin/sh
          unset SESSION_MANAGER
          unset DBUS_SESSION_BUS_ADDRESS
          xrdb $HOME/.Xresources
          startxfce4 &
          EOF
          chmod +x ~/.vnc/xstartup
          vncserver -kill :1 || true

      - name: Install and join ZeroTier
        run: |
          set -e
          curl -fL https://install.zerotier.com/ -o /tmp/zt.sh
          sudo bash /tmp/zt.sh
          sudo zerotier-cli join "${{ inputs.zerotier_network }}"
          echo "Authorize this member in your ZeroTier dashboard."

      - name: Wait for ZeroTier IP
        run: |
          set -e
          for i in $(seq 1 24); do
            ZT_IP=$(sudo zerotier-cli listnetworks | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n1 || true)
            [ -n "$ZT_IP" ] && break
            sleep 5
          done
          [ -z "$ZT_IP" ] && { echo "No ZeroTier IP yet. Authorize device."; exit 1; }
          echo "ZT_IP=$ZT_IP" >> $GITHUB_ENV
          echo "ZeroTier IP: $ZT_IP"

      - name: Start passwordless TigerVNC
        run: |
          set -e
          export DISPLAY=:1
          vncserver -kill :1 || true
          echo "Starting VNC on :1 without password..."
          vncserver :1 -SecurityTypes None -geometry 1280x720
          sleep 5
          echo "Testing X session..."
          DISPLAY=:1 xfce4-terminal --geometry=80x24+100+100 -e "echo 'XFCE started OK'; sleep 3" || true
          echo "VNC should now be listening on port 5901"

      - name: Show connection info
        run: |
          echo "===================================="
          echo "ZeroTier IP: ${ZT_IP}"
          echo "Port: 5901"
          echo "Auth: None (passwordless)"
          echo "Client: RealVNC Viewer, bVNC, or Mocha VNC Lite"
          echo "===================================="

      - name: Keep alive
        run: |
          set -e
          RUNTIME=${{ inputs.runtime_minutes }}
          [ -z "$RUNTIME" ] && RUNTIME=180
          [ "$RUNTIME" -gt 360 ] && RUNTIME=360
          END=$(( $(date +%s) + RUNTIME*60 ))
          while [ "$(date +%s)" -lt "$END" ]; do
            echo "[VNC] Alive at $(date '+%H:%M:%S') (${ZT_IP}:5901)"
            sleep 60
          done
