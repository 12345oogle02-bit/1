name: macOS VNC via ZeroTier (prompt, stable)

on:
  workflow_dispatch:
    inputs:
      zerotier_network:
        description: "ZeroTier Network ID (from https://my.zerotier.com)"
        required: true
      vnc_password:
        description: "VNC password (ARD uses FIRST 8 CHARS)"
        required: true
        default: "Bullet@12345"
      runtime_minutes:
        description: "Keep-alive minutes (<=360)"
        required: false
        default: "180"

jobs:
  vnc:
    runs-on: macos-13
    timeout-minutes: 370
    steps:
      - name: Enable Apple Screen Sharing and set password
        shell: bash
        run: |
          set -euo pipefail
          PW='${{ inputs.vnc_password }}'
          PW8=$(printf "%s" "$PW" | cut -c1-8)
          KS="/System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart"
          sudo "$KS" -activate -configure -access -on -allowAccessFor -allUsers -restart -agent -menu
          sudo "$KS" -configure -clientopts -setvnclegacy -vnclegacy yes
          sudo "$KS" -configure -setvncpw -vncpw "$PW8"
          nohup caffeinate -dimsu >/tmp/caffeinate.log 2>&1 &
          echo "Apple Screen Sharing enabled (port 5900)."

      - name: Wait for port 5900
        shell: bash
        run: |
          set -euo pipefail
          for i in $(seq 1 30); do
            if nc -z 127.0.0.1 5900 2>/dev/null; then
              echo "VNC ready."; exit 0
            fi
            sleep 1
          done
          echo "VNC port 5900 did not open in time."; exit 1

      - name: Install and join ZeroTier
        shell: bash
        run: |
          set -euo pipefail
          curl -fL https://install.zerotier.com/ -o /tmp/zt.sh
          sudo bash /tmp/zt.sh
          sudo zerotier-cli join '${{ inputs.zerotier_network }}'
          echo "Joined ZeroTier. Authorize this member in the dashboard."

      - name: Show connection info
        shell: bash
        run: |
          set -euo pipefail
          ZT_IP=""
          for i in $(seq 1 24); do
            ZT_IP=$(ifconfig | grep -Eo '((10|172)\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})' | head -n1 || true)
            [ -n "$ZT_IP" ] && break
            sleep 5
          done
          PW='${{ inputs.vnc_password }}'
          PW8=$(printf "%s" "$PW" | cut -c1-8)
          echo "===================================="
          if [ -n "$ZT_IP" ]; then
            echo "Connect with an ARD-compatible VNC client:"
            echo " Address : ${ZT_IP}:5900"
          else
            echo "No ZeroTier IP yet â€” authorize the node, then use its ZT IP on port 5900."
          fi
          echo " Password: ${PW8}  (ARD uses FIRST 8 CHARS)"
          echo "Recommended Android clients: Mocha VNC Lite, Screens."
          echo "===================================="

      - name: Keep alive
        shell: bash
        run: |
          set -euo pipefail
          RT='${{ inputs.runtime_minutes }}'
          echo "$RT" | grep -Eq '^[0-9]+$' || RT=180
          [ "$RT" -gt 360 ] && RT=360
          END=$(( $(date +%s) + RT*60 ))
          while [ "$(date +%s)" -lt "$END" ]; do
            echo "[ZT+AppleVNC] Heartbeat $(date '+%H:%M:%S')"
            sleep 60
          done
