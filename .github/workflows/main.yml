name: macOS VNC via ZeroTier (no brew issues)

on:
  workflow_dispatch:
    inputs:
      zerotier_network:
        description: "ZeroTier Network ID from https://my.zerotier.com"
        required: true
      vnc_password:
        description: "VNC password (max 8 chars)"
        required: false
        default: "12345678"
      runtime_minutes:
        description: "Keep-alive time (max 360)"
        required: false
        default: "120"

jobs:
  vnc:
    runs-on: macos-13
    timeout-minutes: 370
    steps:
      - name: Download TigerVNC (prebuilt binary)
        shell: bash
        run: |
          set -e
          cd /tmp
          echo "Downloading TigerVNC..."
          curl -L -o tigervnc.zip https://github.com/TigerVNC/tigervnc/releases/download/v1.13.1/TigerVNC-1.13.1-universal.zip
          unzip tigervnc.zip
          mv TigerVNC-1.13.1-universal vncbin
          echo "✅ TigerVNC extracted to /tmp/vncbin"

      - name: Set VNC password and start server
        shell: bash
        run: |
          set -e
          mkdir -p "$HOME/.vnc"
          VNC_PW="${{ inputs.vnc_password }}"
          VNC_PW="${VNC_PW:0:8}"
          echo -n "$VNC_PW" > "$HOME/.vnc/passwd"
          chmod 600 "$HOME/.vnc/passwd"
          echo "Password file created."

          echo "Starting TigerVNC..."
          /tmp/vncbin/vncserver :1 -geometry 1280x720 -rfbauth "$HOME/.vnc/passwd" &
          sleep 5
          echo "✅ TigerVNC running on port 5901 (:1)"

      - name: Install and join ZeroTier
        shell: bash
        run: |
          set -e
          curl -fL https://install.zerotier.com/ -o zt.sh
          sudo bash zt.sh
          sudo zerotier-cli status || true
          sudo zerotier-cli join "${{ inputs.zerotier_network }}"
          echo "✅ Joined ZeroTier: ${{ inputs.zerotier_network }}"
          echo "Authorize this device on https://my.zerotier.com"

      - name: Wait for ZeroTier IP
        shell: bash
        run: |
          set -e
          for i in {1..20}; do
            IP=$(sudo zerotier-cli listnetworks | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n1 || true)
            if [ -n "$IP" ]; then
              echo "ZT_IP=$IP" >> "$GITHUB_ENV"
              echo "✅ ZeroTier IP: $IP"
              break
            fi
            sleep 5
          done
          if [ -z "${IP:-}" ]; then
            echo "⚠ No IP yet — authorize in dashboard first."
          fi

      - name: Keep alive
        shell: bash
        run: |
          rt="${{ inputs.runtime_minutes }}"
          [[ "$rt" =~ ^[0-9]+$ ]] || rt=120
          (( rt > 360 )) && rt=360
          end=$(( $(date +%s) + 60 * rt ))
          while (( $(date +%s) < end )); do
            echo "[VNC+ZT] Heartbeat $(date '+%H:%M:%S') | ${ZT_IP:-waiting}:5901"
            sleep 60
          done
