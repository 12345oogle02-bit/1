name: Linux VNC via ZeroTier (Full GUI + Passwordless + Auto Fix)

on:
  workflow_dispatch:
    inputs:
      zerotier_network:
        description: ZeroTier Network ID (from my.zerotier.com)
        required: true
      zerotier_api_token:
        description: ZeroTier API Token (masked)
        required: true
      runtime_minutes:
        description: Keep alive duration (minutes)
        required: false
        default: "180"

jobs:
  vnc:
    runs-on: ubuntu-22.04
    timeout-minutes: 370

    steps:
      - name: Install full desktop + VNC tools
        run: |
          sudo apt-get update -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            xfce4 xfce4-goodies tightvncserver x11vnc xvfb openbox \
            lxde-core lxterminal dbus-x11 net-tools curl jq
          sudo apt-get clean

      - name: Start virtual desktop (Xvfb + LXDE)
        run: |
          export DISPLAY=:0
          Xvfb :0 -screen 0 1366x768x24 -nolisten tcp >/tmp/xvfb.log 2>&1 &
          sleep 3
          startlxde >/tmp/lxde.log 2>&1 &
          sleep 5
          echo "Desktop session started."

      - name: Start x11vnc (passwordless) with retry
        run: |
          export DISPLAY=:0
          x11vnc -display :0 -rfbport 5900 -forever -shared -nopw -ncache 10 \
                 -o /tmp/x11vnc.log >/dev/null 2>&1 &
          for i in $(seq 1 40); do
            ss -ltn | grep -q ':5900' && { echo "✅ VNC running on port 5900"; break; }
            sleep 2
          done
          ss -ltn | grep -q ':5900' || { echo "❌ VNC did not start, retrying with TigerVNC..."; }
          sudo vncserver :1 -geometry 1366x768 -SecurityTypes None || true

      - name: Install and join ZeroTier
        run: |
          curl -fsSL https://install.zerotier.com/ -o /tmp/zt.sh
          sudo bash /tmp/zt.sh
          sudo zerotier-cli join "${{ inputs.zerotier_network }}"

      - name: Authorize this device automatically
        env:
          ZT_NET: ${{ inputs.zerotier_network }}
          ZT_TOKEN: ${{ inputs.zerotier_api_token }}
        run: |
          NODE_ID=$(sudo zerotier-cli -j info | jq -r '.address')
          API="https://api.zerotier.com/api/v1/network/${ZT_NET}/member/${NODE_ID}"
          PAY='{"config":{"authorized":true}}'
          for method in POST PUT; do
            code=$(curl -sS -o /tmp/zt.json -w "%{http_code}" \
                   -H "Authorization: bearer ${ZT_TOKEN}" \
                   -H "Content-Type: application/json" \
                   -X $method "$API" -d "$PAY" || true)
            [ "$code" -ge 200 ] && [ "$code" -lt 300 ] && break
          done
          echo "ZeroTier auth status: $code"

      - name: Display VNC connection info
        run: |
          for i in $(seq 1 30); do
            IP=$(sudo zerotier-cli listnetworks | awk '{for(n=1;n<=NF;n++) if ($n ~ /([0-9]{1,3}\.){3}[0-9]{1,3}/){print $n; exit}}')
            [ -n "$IP" ] && break
            sleep 2
          done
          echo "===================================="
          echo "✅ Linux GUI ready!"
          echo " Address : ${IP}:5900"
          echo " Auth    : None (Passwordless)"
          echo " Client  : RealVNC / bVNC / Remmina"
          echo " Note    : Same ZeroTier network only"
          echo "===================================="

      - name: Keep alive
        run: |
          MIN=${{ inputs.runtime_minutes }}
          echo "Keeping session alive for ${MIN} minutes..."
          END=$(( $(date +%s) + MIN*60 ))
          while [ "$(date +%s)" -lt "$END" ]; do
            echo "[Running] VNC online $(date)"
            sleep 60
          done
