name: Kali XFCE + macOS Theme (ZeroTier, Auto-Restart)

on:
  workflow_dispatch:
    inputs:
      zt_network:   { description: "ZeroTier Network ID", required: true }
      zt_api_token: { description: "ZeroTier API Token (optional)", required: false }
      vnc_password: { description: "VNC password (leave blank for passwordless)", required: false, default: "" }
      runtime:      { description: "Runtime in minutes (max 355)", required: false, default: "180" }

jobs:
  kali:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Install XFCE, tools, and dependencies
        run: |
          sudo apt-get update -y
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            xfce4 xfce4-goodies x11vnc xvfb dbus-x11 curl jq git plank ca-certificates \
            fonts-inter gsettings-desktop-schemas htop neofetch net-tools libxml2-utils
          echo "‚úÖ XFCE & base utilities installed."

      - name: Install and apply macOS WhiteSur Theme (stable)
        run: |
          mkdir -p ~/.themes ~/.icons ~/Pictures ~/.config/autostart
          cd ~
          git clone --depth=1 https://github.com/vinceliuice/WhiteSur-gtk-theme WhiteSur-gtk-theme
          git clone --depth=1 https://github.com/vinceliuice/WhiteSur-icon-theme WhiteSur-icon-theme
          git clone --depth=1 https://github.com/vinceliuice/McMojave-cursors McMojave-cursors
          cd WhiteSur-gtk-theme && bash install.sh -c dark && cd ~
          cd WhiteSur-icon-theme && bash install.sh && cd ~
          cd McMojave-cursors && bash install.sh && cd ~
          curl -fsSL -o ~/Pictures/wall.jpg https://raw.githubusercontent.com/adi1090x/wallpapers/master/apple/007.jpg || true
          cat > ~/.config/autostart/plank.desktop <<'EOF'
          [Desktop Entry]
          Type=Application
          Exec=plank
          Hidden=false
          NoDisplay=false
          X-GNOME-Autostart-enabled=true
          Name=Plank Dock
          EOF
          echo "‚úÖ WhiteSur macOS theme applied."

      - name: Start XFCE Desktop (virtual)
        run: |
          export DISPLAY=:0
          Xvfb :0 -screen 0 1366x768x24 -nolisten tcp &
          sleep 3
          dbus-launch startxfce4 >/tmp/xfce.log 2>&1 &
          sleep 8
          xfconf-query -c xsettings -p /Net/ThemeName -s "WhiteSur-Dark" || true
          xfconf-query -c xsettings -p /Net/IconThemeName -s "WhiteSur" || true
          xfconf-query -c xsettings -p /Gtk/CursorThemeName -s "McMojave-cursors" || true
          xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitor0/image-path -s "$HOME/Pictures/wall.jpg" || true
          echo "‚úÖ XFCE desktop launched."

      - name: Start VNC Server (auto-restart loop)
        run: |
          export DISPLAY=:0
          echo "üîÅ Starting x11vnc (auto-restart mode)"
          while true; do
            if [ -n "${{ github.event.inputs.vnc_password }}" ]; then
              x11vnc -storepasswd "${{ github.event.inputs.vnc_password }}" ~/.vncpass
              x11vnc -display :0 -rfbport 5900 -forever -shared -rfbauth ~/.vncpass -noxdamage -nopw &
            else
              x11vnc -display :0 -rfbport 5900 -forever -shared -nopw -noxdamage &
            fi
            wait $!
            echo "‚ö†Ô∏è VNC crashed ‚Äî restarting..."
            sleep 2
          done &

      - name: Install and join ZeroTier network
        run: |
          curl -s https://install.zerotier.com/ | sudo bash
          sudo zerotier-cli join "${{ github.event.inputs.zt_network }}"
          sleep 10
          sudo zerotier-cli listnetworks
          echo "‚úÖ Joined ZeroTier network."

      - name: Auto-authorize node (optional)
        if: ${{ github.event.inputs.zt_api_token != '' }}
        run: |
          NET="${{ github.event.inputs.zt_network }}"
          TOKEN="${{ github.event.inputs.zt_api_token }}"
          NODE=$(sudo zerotier-cli info -j | jq -r .address)
          curl -fsSL -X POST -H "Authorization: token $TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"config":{"authorized":true}}' \
            "https://api.zerotier.com/api/v1/network/${NET}/member/${NODE}" || true
          echo "‚úÖ Node authorized via API."

      - name: Show connection info
        run: |
          IP=$(ip -4 -o addr show | awk '/zt/{print $4}' | cut -d/ -f1 | head -n1)
          echo "==============================="
          echo "üíª Kali XFCE + macOS Theme"
          echo "VNC Address: ${IP}:5900"
          if [ -n "${{ github.event.inputs.vnc_password }}" ]; then
            echo "Password: ${{ github.event.inputs.vnc_password }}"
          else
            echo "Passwordless access (no authentication)"
          fi
          echo "==============================="

      - name: Keep Alive
        run: |
          for i in $(seq 1 ${{ github.event.inputs.runtime || 180 }}); do
            echo "üïí Running... ($i / ${{ github.event.inputs.runtime || 180 }} mins)"
            sleep 60
          done
